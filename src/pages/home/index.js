const router = require('koa-router')()

router.get('/', async (ctx) => {
  //TODO: Realistic demo content.
  const projects = [{
    date: "November 2017 - Januari 2018",
    description: "In mijn vrije tijd heb ik een portfolio app gemaakt voor Android.<br/>Deze app heb ik gemaakt omdat ik wilde experimenteren met Kotlin, de Android api en Material Design. <br/><br/>De app maakt gebruik van Fragments, de Youtube API, Android Oreo Adaptive Icons en meer. <br/><br/>Tijdens de ontwikkeling heb ik ook veel geprobeerd wat uiteindelijk niet in de app is gekomen. Een voorbeeld hiervan is een Shared Element Transition.",
    id: "android_portfolio_app",
    images: ["https://portfolio.insertcode.eu/media/app_android_portfolio_1.png"],
    links: { github: "https://github.com/MrTheGood/portfolio_android" },
    tags: [["Android", "#6200ea"], ["Kotlin", "#64dd17"]],
    title: "Android Portfolio App",
    type: ["smartphone", "#00c853"]
  }, {
    date: "14 mei 2018",
    description: "Tijdens mijn examenjaar bij Grafisch Lyceum Rotterdam heb ik vrijwillig een gastles gegeven aan de 2e-jaars. Bij deze gastles heb ik wat over mezelf verteld, wat gepraat over waarom Native Android belangrijk is, een aantal getting started tips gegeven en ook nog een voorbeeld app gemaakt met de leerlingen die interested waren. <br/><br/>Zie hieronder de volledige transcriptie van de les, die ik een half jaar later na het geven van de les heb opgeschreven:<br/><br/>Android is dit jaar 10 jaar oud geworden. Sinds 2008 zijn er al 1.800.000 Android apps in de Google Play Store gezet en draaien 85% van de smartphones Android. <br/><br/>Mijn naam is Maarten de Goede en ik ga jullie wat vertellen over Native Android Development. <br/>Ik ga beginnen met vertellen wie ik ben. Verder ga ik praten over waarom Native Android belangrijk is, geef ik wat getting started tips en voor de geïnteresseerde maken we samen een simpele voorbeeld app.<br/><br/><b>Over Mij</b><br/>Nou, ik ben dus Maarten de Goede, ik ben 19 jaar oud, kom uit Voorhout en zit nu in het examenjaar van de zelfde opleiding die jullie doen. <br/>Ik ben ongeveer 4 jaar geleden begonnen met programmeren door het maken van plugins voor Minecraft servers, en ik ben tegenwoordig vooral bezig met Kotlin en Java. <br/><br/>Op deze slide kan je een screenshot zien van een voorbeeld app die ik even heb gemaakt met Grafisch Lyceum styling. De method die je midden boven ziet, zie je de code die de kaarten op de juiste positie in de stack zet, either instantly of animated. <br/>De method daaronder laat een error melding zien bij bijvoorbeeld het inloggen. <br/><br/>Dit jaar heb ik stage gelopen bij AppStudio in Zoetermeer. Een bedrijf met 17 werknemers wat sinds 2008 al meer dan 400 apps heeft gemaakt voor onder anderen iOS, Android en Windows Phone. <br/><br/>Dit zijn een paar van de apps die ik heb gemaakt. Helemaal links is een app die ik hier vorig jaar bij een project heb gemaakt. Bij het maken van die app moest ik bijna alles zelf uitzoeken binnen slechts 8 weken tijd. Het is een app waarin je tips kan zien voor bepaalde locaties, dus bijvoorbeeld landen en steden. Door een te kort aan tijd en kennis is het duidelijk geen goede app geworden. <br/>In het midden is mijn Portfolio app, deze app heb ik vooral gemaakt om Kotlin te leren, en om de Android basics beter onder de knie te krijgen. <br/>En rechts is een app die ik heb gemaakt tijdens mijn stage bij AppStudio. Het is een app waarin je de YouTube video’s en jaarverslagen van de klant kan bekijken. <br/><br/><b>Waarom Native Android</b><br/>Native Android heeft meerdere voordelen. <br/>Zo kan je het veel meer optimaliseren dan als je de app op een andere manier zou maken, zoals bijvoorbeeld met een framework of als mobile website. Daardoor is je app dus sneller.<br/><br/>Je kan ook gebruik maken van de sensors, camera’s en het grote aantal libraries. <br/>En je hebt natuurlijk veel controle over user interactions zoals orientation changes, dus het roteren van een scherm of gebruik maken van multiwindow. <br/><br/>Maar het heeft ook nadelen. Java is een taal met veel boilerplate, en het Android framenwork voegt daar wel meer aan toe. Android heeft ook een best grote learning curves, met veel informatie die je moet weten. <br/>Er zijn ook enorm veel verschillende Android devices met enorm veel verschillende schermen, waarbij ze niet altijd allemaal aan de normale api houden, zoals bij sommige Samsung devices.<br/><br/><br/><b>Getting started tips</b><br/>Veel beginnende developers weten niet hoe je een crashlog leest. Het ziet er eng uit en bevat enorm veel informatie. Het belangrijkste is vooral de Exception type. Dit kan je vinden achter “Caused by”.  In dit geval is het een KotlinNullPointerException. Als je de exception opzoekt krijg je bijna altijd al een uitleg over je probleem. <br/><br/>Gradle is nog zo’n eng ding. Wat is het nou eigenlijk? <br/>Nou, Gradle is dus een build system. Het verzameld eigenlijk simpel gezegd alle files, controleert ze op errors en stopt ze in het APK bestand. <br/><br/>In de build.gradle file, die je kan vinden in de app directory, kan je veel configureren.<br/>Je kan hier libraries toevoegen, zoals je me in dit voorbeeld bestand ziet doen voor Glide, waarmee je makkelijk images kan loaden van het internet, of Moshi, waarmee je makkelijk JSON strings kan omzetten naar objects. <br/>Bovenin zie je targetSdkVersion staan. Dit is eigenlijk gewoon welke Android versie je target. 27 is Android Oreo, wat op dit moment de nieuwste Android versie is. Deze version codes kan je op het internet vinden door “android version codes” op te zoeken. <br/><br/>En als laatste van de reeks enge dingen hebben we de Android resource files. Deze files zijn voor de layouts, image assets (in de drawable folder), en values zoals colors, dimensions, strings en styles. <br/><br/>Tot slot heb ik nog wat algemene tips voor Android development:<br/>Allereerst, maak gebruik van libraries. Er zijn heel veel goede libraties die je werk als developer makkelijker maken. <br/>Verder raad ik Kotlin aan, maar als je geen tijd/zin hebt om een nieuwe programmeertaal te leren kan je beter Java gebruiken. Dat is bijna hetzelfde als C#.<br/>En als laatste: gebruik op de school computers geen emulator. Die maakt de computer enorm traag. Gebruik liever je eigen telefoon, waarvoor je niet heel veel hoeft te doen.  Dat is gewoon een kwestie van Developer settings toestaan, USB debugging toestaan en je telefoon aan de pc aansluiten. <br/><br/>Dit is dan echt het laatste. Android heeft een activity lifecycle, waar een activity (dus een pagina) doorheen gaat. Hier heeft een activity mee te maken bij het openen, bij navigeren naar andere apps, gebruik van multi window en orientation changes. <br/>Dit kunnen jullie in principe allemaal vergeten, maar probeer gewoon te onthouden dat het een ding is en dat het belangrijk is in Android Development.  <br/><br/>That’s it! Zijn er nog vragen?",
    id: "glr_gastles_android",
    images: ["https://portfolio.insertcode.eu/media/glr_gastles_android_0.png"],
    tags: [["android", "#6200ea"]],
    title: "Presentatie Native Android",
    type: ["code", "#ff9100"]
  }]

  await ctx.render('home.njk', { projects: projects })
})

module.exports = router.routes()